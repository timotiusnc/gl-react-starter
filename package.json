{
  "name": "gl-react-starter",
  "version": "0.0.1",
  "description": "Starter for scaffolding a new CSR-only React web app",
  "scripts": {
    "buildDev": "webpack --config webpack.dev.js --progress",
    "buildProd": "webpack --config webpack.prod.js --progress",
    "buildAlt": "webpack --config webpack.prod.alt.js --progress",
    "build": "npm run buildProd",
    "lint": "./node_modules/tslint/bin/tslint -p tsconfig.json",
    "lint-fix": "./node_modules/tslint/bin/tslint -p tsconfig.json --fix",
    "start": "webpack-dev-server --config webpack.dev.js",
    "test": "jest",
    "coverage": "jest --coverage",
    "prettier": "prettier --check ./src/**/*.{ts,tsx}",
    "prettier-fix": "prettier --write ./src/**/*.{ts,tsx}"
  },
  "scriptsComments": {
    "buildDev": "build code in development mode."
  },
  "author": "GDP Labs",
  "license": "ISC",
  "dependencies": {
    "apollo-boost": "0.4.1",
    "graphql": "14.3.1",
    "react": "16.8.6",
    "react-apollo": "2.5.6",
    "react-dom": "16.8.6",
    "react-intl": "2.9.0",
    "react-loadable": "5.5.0",
    "react-router-dom": "5.0.0"
  },
  "dependenciesComments": {
    "apollo-boost": "Several libraies for boosting your apollo client. It includes apollo-cache apollo-cache-inmemory apollo-client apollo-link apollo-link-error apollo-link-http graphql-tag ts-invariant tslib",
    "graphql": "Peer dependency for apollo-boost and almost everything inside it",
    "react": "React library",
    "react-apollo": "React integration for apollo-client library, e.g. <Query> and <Mutation> HoC and compose function",
    "react-dom": "Render React component into DOM",
    "react-intl": "I18N and L10N library",
    "react-loadable": "If we can't use React Suspense (because we need SSR), we need to use this react-lodable",
    "react-router-dom": "React de-facto library for routing (move between HTML pages)"
  },
  "devDependencies": {
    "@testing-library/react": "8.0.1",
    "@types/graphql": "^14.2.0",
    "@types/jest": "24.0.13",
    "@types/react": "16.8.17",
    "@types/react-dom": "16.8.4",
    "@types/react-intl": "2.3.17",
    "@types/react-loadable": "5.5.1",
    "@types/react-router-dom": "5.1.6",
    "clean-webpack-plugin": "2.0.1",
    "css-loader": "2.1.1",
    "dotenv-webpack": "1.7.0",
    "file-loader": "4.0.0",
    "html-webpack-plugin": "3.2.0",
    "jest": "24.8.0",
    "jest-dom": "3.3.0",
    "mini-css-extract-plugin": "0.7.0",
    "node-sass": "4.12.0",
    "prettier": "1.17.1",
    "sass-loader": "7.1.0",
    "ts-jest": "24.0.2",
    "ts-loader": "5.3.3",
    "tslint": "5.16.0",
    "tslint-config-prettier": "1.18.0",
    "tslint-react": "4.0.0",
    "typescript": "3.3.4000",
    "webpack": "4.30.0",
    "webpack-cli": "3.3.1",
    "webpack-dev-server": "3.3.1",
    "webpack-merge": "4.2.1"
  },
  "devDependenciesComments": {
    "@testing-library/react": "So we can test React component the way we will use it in development",
    "@types/graphql": "TypeScript typings for graphql so we have access to things like GraphQLError, GraphQLArgs, and graphql<...>.",
    "@types/jest": "TypeScript typings for jest (test library)",
    "@types/react": "TypeScript typings for react",
    "@types/react-dom": "TypeScript typings for react-dom",
    "@types/react-intl": "TypeScript typings for react-intl",
    "@types/react-loadable": "TypeScript for react-loadable",
    "@types/react-router-dom": "TypeScript for react-router-dom",
    "clean-webpack-plugin": "Clean specific folder (usually `dist`) before building",
    "css-loader": "Loader for CSS files. Interprets @import and url() like import/require() and will resolve them",
    "dotenv-webpack": "Read .env file and put the variables into 'process.env'",
    "file-loader": "Resolves import/require() on a file into a url and emits the file into the output directory",
    "html-webpack-plugin": "Generate HTML for us, completed with link to our bundles src",
    "jest": "Test library",
    "jest-dom": "Enhance jest so we have custom matchers that will make our test easier, e.g. toHaveAttribute, toBeDisabled",
    "mini-css-extract-plugin": "Extracts CSS into separate files",
    "node-sass": "Peer dependency for sass-loader",
    "prettier": "Opinionated code formatter",
    "sass-loader": "Loader for .scss or .sass files",
    "ts-jest": "TypeScript loader for jest",
    "ts-loader": "Preprocess (compile) TypeScript to JavaScript",
    "tslint": "TypeScript linting",
    "tslint-config-prettier": "Use prettier alongside tslint without any conflict:  Prettier takes care of the formatting whereas tslint takes care of all the other things.",
    "tslint-react": "TypeScript linting for React",
    "typescript": "The TypeScript compiler. Needed by `ts-loader",
    "webpack": "To build (bundle) our code. Similar to gradle, ant, and maven.",
    "webpack-cli": "To run `webpack` command, we need a CLI and this webpack-cli is the obvious choice",
    "webpack-dev-server": "To auto reload our web app whenever there's code changes. Also supports Hot Module Replacement (HMR) if enabled",
    "webpack-merge": "For merging webpack config files. So we can have webpack.common.js and webpack.(dev|staging|prod).js"
  }
}
